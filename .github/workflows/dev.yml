name: Build, Test and Deploy on Develop BE 
on:
  push:
    branches:
      - Develop

jobs:
  terraform-deploy:
    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
      AWS_REGION: ${{ secrets.AWS_REGION }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Clone Terraform Repository
        run: git clone --branch main https://github.com/Proyecto-DevOps-Gonzalo-Gaston/DevOps.git terraform

      - name: Verify Cloned Directory
        run: |
          ls -l terraform

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        run: |
          cd terraform/Terraform/TerraformBE-pre
          terraform init

      - name: Terraform Plan
        run: |
          cd terraform/Terraform/TerraformFE
          terraform plan

      - name: Terraform Apply
        run: |
          cd terraform/Terraform/TerraformFE
          terraform apply -auto-approve

  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2
        
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '8'  
          distribution: 'adopt'
          server-id: github
          settings-path: ${{ github.workspace }}

      - name: Install Maven dependencies
        run: mvn dependency:resolve

      - name: Build with Maven
        run: mvn clean install
      
  test:
    runs-on: ubuntu-latest

    needs: build

    steps:
    - name: Checkout código
      uses: actions/checkout@v2

    - name: Set up JDK
      uses: actions/setup-java@v2
      with:
        java-version: '8'  
        distribution: 'adopt'
        server-id: github
        settings-path: ${{ github.workspace }}

    - name: Run Tests with Maven
      run: mvn test

  
  deploy:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Check out código
        uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '8'  
          distribution: 'adopt'
          server-id: github
          settings-path: ${{ github.workspace }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ secrets.AWS_REGION }}
      
      - name: Build Docker image
        run: |
          mvn clean package -DskipTests
          docker build --build-arg JAR_FILE=target/orders-service-example-0.0.1-SNAPSHOT.jar -t orders-service-example:develop .
      
      - name: Log in to AWS ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

      - name: Tag and Push Docker image to AWS ECR
        run: |
          docker tag orders-service-example:develop ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/proyecto-devops-gg-orders:develop
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/proyecto-devops-gg-orders:develop
